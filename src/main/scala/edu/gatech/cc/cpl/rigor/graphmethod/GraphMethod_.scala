package edu.gatech.cc.cpl.rigor.graphmethod

import edu.gatech.cc.cpl.rigor.{SeedSet, ???}

/**
 * Created by arya on 7/1/14.
 */

case class Unaries(nonlambda_s: ???, lambda_s: ???, lambda_t: ???)

trait Submethod {
  def prepare_graphs(obj: ???): ??? = ???
  def create_unaries(obj: ???, seedSets: Seq[SeedSet]): Unaries = ???
}

trait GraphMethod_ {
  type Submethod

  /* properties */
  def seg_obj: ??? = ???

  def graph_sub_methods: ??? = ???
  def graph_seed_frame_weight: ??? = ???
  def graph_unary_exp_scale: ??? = ???
  def graph_pairwise_multiplier: ??? = ???
  def graph_pairwise_contr_weight: ??? = ???
  def graph_pairwise_potts_weight: ??? = ???
  def graph_pairwise_sigma: ??? = ???
  def graph_sub_methods_cut_param: ??? = ???

  def precomputed_seeds: ??? = ???
  def seed_mapping_idx: ??? = ???

  def edge_vals: ??? = ???

  def fg_node_id: ??? = ???
  def bg_node_id: ??? = ???

  def graph_unaries_all: ??? = ???
  def graph_sets_per_method: ??? = ???

  /* methods */
  def init(obj: ???, seg_obj: ???, segm_index: ???): ??? = ???
  def prepare_graphs(obj: ???): ??? = ???
  def create_unaries(obj: ???, graph_sub_method: Submethod, seed_sets: ???): ??? = ???
}
object GraphMethod_ {
  val SEED_FRAME_WEIGHT = 1000
}











